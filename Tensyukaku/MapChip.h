//#pragma once
//namespace Tsk {
//	class Game;
//	class ObjectBase;
//	// マップチップクラス
//	class MapChips {
//	public:
//		MapChips();
//		~MapChips();
//
//		void	Process(Game& g);
//		void	Draw();
//
//		int		CheckHit(int x, int y);
//		int		IsHit(ObjectBase& o, int mx, int my);
//		int		GetScrX() { return _scrX; }
//		int		GetScrY() { return _scrY; }
//		void	SetScr(int scrX, int scrY) { _scrX = scrX; _scrY = scrY; }
//
//	private:
//		// マップのサイズ（チップ数）
//		static const int MAPSIZE_W = 64;	// width
//		static const int MAPSIZE_H = 18;	// height
//		// チップの個数
//		static const int CHIPCOUNT = 64;		// tilecount
//		static const int CHIPCOUNT_W = 8;		// columns
//		static const int CHIPCOUNT_H = (CHIPCOUNT / CHIPCOUNT_W);
//		// チップサイズ
//		static const int CHIPSIZE_W = 40;
//		static const int CHIPSIZE_H = 40;
//		// レイヤー数
//		static const int MAPSIZE_LAYER = 1;
//
//		int		_cgChip[CHIPCOUNT];		// マップチップ画像
//		int		_scrX, _scrY;		// スクロール値
//
//		// マップデータ
//		int		_mapData[MAPSIZE_LAYER * MAPSIZE_W * MAPSIZE_H] = {
//	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
//			0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
//			0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
//			0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,19,
//			0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,18,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,16,7,7,7,14,0,0,0,1,7,7,
//			0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,13,13,13,14,17,16,13,13,13,14,0,0,0,0,0,0,0,0,9,7,7,7,11,0,0,0,0,0,0,0,0,0,0,0,17,0,8,8,8,0,0,0,0,1,8,8,
//			0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,9,10,8,8,8,12,11,0,0,0,0,0,0,0,0,0,0,17,0,8,8,8,0,0,0,0,1,8,8,
//			0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,9,10,8,8,8,8,8,12,11,0,0,0,0,0,0,0,0,0,17,0,8,8,8,0,0,0,0,1,8,8,
//			0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,9,10,8,8,8,8,8,8,8,12,11,0,0,0,0,0,0,0,0,17,0,8,8,8,0,0,0,0,1,8,8,
//			0,0,0,0,2,2,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,9,10,8,8,8,8,8,8,8,8,8,12,11,0,0,0,0,2,0,0,17,0,8,8,8,0,0,0,0,1,8,8,
//			7,7,7,7,7,7,7,11,0,0,5,5,6,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,9,10,8,8,8,8,8,8,8,8,8,8,8,12,11,0,0,2,2,2,0,17,0,8,8,8,0,0,0,0,1,8,8,
//			8,8,8,8,8,8,8,12,7,7,7,7,7,7,11,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,9,10,8,8,8,8,8,8,8,8,8,8,8,8,8,12,7,7,7,7,7,7,7,7,8,8,8,0,0,0,0,1,8,8,
//			8,8,8,8,8,8,8,8,8,8,8,8,8,8,12,11,0,0,0,0,0,0,17,0,0,0,0,0,0,9,10,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,1,8,8,
//			8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,12,11,0,0,0,0,0,17,0,0,2,0,0,9,10,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,1,8,8,
//			8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,12,7,0,0,7,7,7,7,7,7,7,7,10,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,1,8,8,
//			8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,1,8,8,
//			21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,21,21,
//			20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20
//		};
//	};
//}